
# This is a basic workflow to help you get started with Actions

name: Build-Docker

# Controls when the action will run. Triggers the workflow on any push
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Use GitHub's Docker registry to cache intermediate layers
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - run: docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache || true

      - name: Build the Docker image
        run: |
          git fetch --prune --unshallow --tags
          docker build . -t pyaleph-node:${GITHUB_REF##*/} -f deployment/docker-build/Dockerfile --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache

      - name: Push the image on GitHub's repository
        run: docker tag pyaleph-node:${GITHUB_REF##*/} docker.pkg.github.com/$GITHUB_REPOSITORY/pyaleph-node:${GITHUB_REF##*/} && docker push docker.pkg.github.com/$GITHUB_REPOSITORY/pyaleph-node:${GITHUB_REF##*/} || true

      - name: Cache the image on GitHub's repository
        run: docker tag pyaleph-node:${GITHUB_REF##*/} docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache && docker push docker.pkg.github.com/$GITHUB_REPOSITORY/build-cache || true

      - name: Test the Docker image
        run: |
          docker run --name pyaleph --user aleph pyaleph-node:${GITHUB_REF##*/} pyaleph --help
